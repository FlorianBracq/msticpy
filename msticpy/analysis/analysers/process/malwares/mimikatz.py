"""This is a set of sample functions to demonstrate how process analysers could work."""

from typing import Any, Dict, List, Optional, Union

import pandas as pd

from ..common import (
    assess_process_by_command_line,
    assess_process_by_process_name,
)


def mimikatz_executable(
    dataframe: pd.DataFrame,
    process_names: Optional[Union[str, List[str]]] = None,
    **kwargs,
) -> pd.DataFrame:
    """
    Search for mimikatz based on its process name.

    Parameters
    ----------
    dataframe: pd.DataFrame
        Data to analyze.
    process_names: Optional[Union[str, List[str]]]
        Known process names for mimikatz.

    Returns
    -------
    pd.DataFrame
        DataFrame rows where columns contain one of the keywords

    """
    if not process_names:
        process_names = "mimikatz.exe"
    return assess_process_by_process_name(
        dataframe,
        process_names=process_names,
        **kwargs,
    )


def known_mimikatz_parameters(
    dataframe: pd.DataFrame,
    parameters: Optional[Union[str, List[str]]] = None,
    **kwargs,
) -> pd.DataFrame:
    """
    Search for mimikatz based on its parameters.

    Based on:
    https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/win_alert_mimikatz_keywords.yml

    Parameters
    ----------
    dataframe: pd.DataFrame
        Data to analyze.
    parameters: Optional[Union[str, List[str]]]
        Known parameters for mimikatz.

    Returns
    -------
    pd.DataFrame
        DataFrame rows where columns contain one of the keywords

    """
    if not parameters:
        parameters = [
            "dpapi::masterkey",
            "eo.oe.kiwi",
            "event::clear",
            "event::drop",
            "gentilkiwi.com",
            "kerberos::golden",
            "kerberos::ptc",
            "kerberos::ptt",
            "kerberos::tgt",
            "Kiwi Legit Printer",
            "lsadump::",
            "mimidrv.sys",
            r"\mimilib.dll",
            "misc::printnightmare",
            "misc::shadowcopies",
            "misc::skeleton",
            "privilege::backup",
            "privilege::debug",
            "privilege::driver",
            "sekurlsa::",
        ]
    return assess_process_by_command_line(
        dataframe,
        command_lines=parameters,
        **kwargs,
    )


ANALYSER_MIMIKATZ: List[Dict[str, Any]] = [
    {"function": mimikatz_executable, "score": 100},
    {"function": known_mimikatz_parameters, "score": 90},
]
